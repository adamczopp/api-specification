openapi: 3.0.3

info:
  version: 1.0.0
  title: 10DLC Brand and Campaign Provisioning
  contact:
    name: Vonage
    url: https://developer.nexmo.com
    email: devrel@vonage.com
  description: APIs relating to 10DLC brand and campaign management

servers:
  - url: 'https://api.nexmo.com'

paths:
  /v1/10DLC/brands:
    get:
      tags:
        - Brands
      description: List brands
      operationId: listBrands
      summary: Retrieve all of the brands associated with your account.
      responses:
        '200':
          $ref: '#/components/responses/MultiBrandsResponse'
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
    post:
      tags:
        - Brands
      description: Create a new brand
      operationId: createBrand
      summary: Create a new brand for your account
      requestBody:
        $ref: '#/components/requestBodies/CreateBrand'
      responses:
        '201':
          $ref: '#/components/responses/SingleBrandResponse'
        '400':
          $ref: '#/components/responses/ErrorCreateBrandResponse'
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"

  /v1/10DLC/brands/{brand_id}:
    parameters:
      - $ref: '#/components/parameters/BrandId'
    get:
      tags:
        - Brands
      summary: Retrieve a specific brand
      description: Get a brand
      operationId: getBrand
      responses:
        '200':
          $ref: '#/components/responses/SingleBrandResponse'
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
    patch:
      tags:
        - Brands
      summary: Partially update a specific brand
      description: Partial update of a brand
      operationId: patchBrand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandEditableFields'
      responses:
        '200':
          $ref: '#/components/responses/SingleBrandResponse'
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
    put:
      tags:
        - Brands
      summary: Update a specific brand
      description: Update a brand
      operationId: updateBrand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandEditableFields'
      responses:
        '200':
          $ref: '#/components/responses/SingleBrandResponse'
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
    delete:
      tags:
        - Brands
      summary: Remove a specific brand from your account
      description: Delete a brand
      operationId: deleteBrand
      responses:
        '204':
          description: No content
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"

  /v1/10DLC/brands/{brand_id}/use_cases:
    parameters:
      - $ref: "#/components/parameters/BrandId"
    get:
      tags:
        - Brands
      summary: Retrieve a list of use cases that are registered for a brand
      description: List use cases for brand
      operationId: listBrandUseCases
      responses:
        '200':
          $ref: '#/components/responses/MultiUseCasesResponse'
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
  #   # post:
  #   #   description: Qualify a new use case for a brand

  # # /v1/10DLC/brands/{brand_id}/use_cases/{use_case_id}:
  # #   get:
  # #     description: Retrieve use case details on a brand
  # #   delete:
  # #     description: Remove a use case from a brand
  
  # # /v1/10DLC/brands/{brand_id}/vetting:
  # #   get:
  # #     description: Retrieve current information needed for vetting a brand
  # #   post:
  # #     description: Request vetting for a brand
  # #   put:
  # #     description: Update vetting information for a brand

  /v1/10DLC/brands/{brand_id}/campaigns:
    parameters:
      - $ref: '#/components/parameters/BrandId'
    get:
      tags:
        - Campaigns
      description: List campaigns
      operationId: listCampaigns
      summary: Retrieve all of the campaigns associated with a brand
      responses:
        '200':
          $ref: '#/components/responses/MultiCampaignsResponse'
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
    post:
      tags:
        - Campaigns
      description: Create Campaign
      operationId: createCampaign
      summary: Add a new campaign to a brand
      requestBody:
        $ref: '#/components/requestBodies/CreateCampaign'
      responses:
        '201':
          $ref: '#/components/responses/SingleCampaignResponse'
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"

    # post:
    #   tags:
    #     - Campaign
    #   description: Create a new brand
    #   operationId: createCampaign
    #   summary: Create a new brand for your account
    #   requestBody:
    #     $ref: '#/components/requestBodies/CreateBrand'
    #   responses:
    #     '201':
    #       $ref: '#/components/responses/SingleCampaignResponse'
    #     '401':
    #       $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
    #     '404':
    #       $ref: "common/common_errors.yml#/components/responses/NotFoundError"

  /v1/10DLC/brands/{brand_id}/campaigns/{campaign_id}:
    parameters:
      - $ref: '#/components/parameters/BrandId'
      - $ref: '#/components/parameters/CampaignId'
    get:
      tags:
        - Campaigns
      summary: Retrieve a specific campaign
      description: Get a campaign
      operationId: getCampaign
      responses:
        '200':
          $ref: '#/components/responses/SingleCampaignResponse'
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
    patch:
      tags:
        - Campaigns
      summary: Partially update a specific campaign
      description: Partial update of a campaign
      operationId: patchCampaign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
      responses:
        '200':
          $ref: '#/components/responses/SingleCampaignResponse'
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
    put:
      tags:
        - Campaigns
      summary: Update a specific campaign
      description: Update a campaign
      operationId: updateCampaign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
      responses:
        '200':
          $ref: '#/components/responses/SingleCampaignResponse'
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
    delete:
      tags:
        - Campaigns
      summary: Stop a specific campaign on a brand
      description: Stop a brand
      operationId: deleteCampaign
      responses:
        '204':
          description: No content
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"

  /v1/10DLC/brands/{brand_id}/campaigns/{campaign_id}/numbers:
    parameters:
      - $ref: '#/components/parameters/BrandId'
      - $ref: '#/components/parameters/CampaignId'
    get:
      tags:
        - Numbers
      summary: Retrieve Numbers associated with a campaign
      description: Get numbers in campaign
      operationId: getNumbers
      responses:
        '200':
          $ref: '#/components/responses/MultiNumbersResponse'
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"
    # post:
    #   tags:
    #     - Numbers
    #   summary: Add numbers to a campaign
    #   operationId: addNumbersFromCampaign
    #   description: |
    #     Adds a series of numbers from a campaign. This endpoint supports _partial successes_. If a request is partially
    #     successful, the response code will be `207` and details can be found in the response body.

    #     If all items succeed, you will receive a `200`. If all items fail, you will receive a `400`.
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           description: Add numbers to a campaign
    #           type: object
    #           properties:
    #             numbers:
    #               type: array
    #               items:
    #                 $ref: '#/components/schemas/Number'
    #               example:
    #                 - '15556660001'
    #                 - '15556660002'
    #           required:
    #             - numbers
    #   responses:
    #     '201':
    #       description: Numbers were successfully added to campaign
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               numbers:
    #                 type: array
    #                 items:
    #                   $ref: '#/components/schemas/Number'
    #               _links:
    #                 type: object
    #                 properties:
    #                   self:
    #                     type: object
    #                     properties:
    #                       href:
    #                         type: string
    #                   campaign:
    #                     type: object
    #                     properties:
    #                       href:
    #                         type: string
    #     '207':
    #       $ref: '#/components/responses/ErrorCouldNotRemoveNumberResponse'
    #     '400':
    #       description: Client errors
    #       content:
    #         application/json:
    #           schema:
    #             oneOf:
    #               - $ref: '#/components/responses/ErrorCouldNotRemoveNumberResponse/content/application~1json/schema'
    #               - $ref: '#/components/responses/ErrorUnableToParseRequestResponse/content/application~1json/schema'
    #     '401':
    #       $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
    #     '404':
    #       $ref: "common/common_errors.yml#/components/responses/NotFoundError"
    #     '413':
    #       description: Too many numbers to process
    #       content:
    #         application/json:
    #           schema:
    #             allOf:
    #               - $ref: 'common/common_errors.yml#/components/responses/DefaultError/content/application~1json/schema'
    #               - $ref: '#/components/schemas/ErrorTooManyNumbers'

  # /v1/10DLC/brands/{brand_id}/campaigns/{campaign_id}/numbers/delete:
  #   parameters:
  #     - $ref: '#/components/parameters/BrandId'
  #     - $ref: '#/components/parameters/CampaignId'
  #   post:
  #     summary: Remove a series of number from a campaign
  #     operationId: deleteNumbersFromCampaign
  #     description: |
  #       Remove a series of numbers from a campaign. This endpoint supports _partial successes_. If a request is partially
  #       successful, the response code will be `207` and details can be found in the response body.

  #       If all items succeed, you will receive a `200`. If all items fail, you will receive a `400`.
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             description: Add numbers to a number pool
  #             type: object
  #             properties:
  #               numbers:
  #                 type: array
  #                 items:
  #                   $ref: '#/components/schemas/Number'
  #                 example:
  #                   - '15556660001'
  #                   - '15556660002'
  #             required:
  #               - numbers
  #     responses:
  #       '204':
  #         description: No Content
  #       '207':
  #         $ref: '#/components/responses/ErrorCouldNotRemoveNumberResponse'
  #       '400':
  #         description: Client errors
  #         content:
  #           application/json:
  #             schema:
  #               oneOf:
  #                 - $ref: '#/components/responses/ErrorCouldNotRemoveNumberResponse/content/application~1json/schema'
  #                 - $ref: '#/components/responses/ErrorUnableToParseRequestResponse/content/application~1json/schema'
  #       '401':
  #         $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
  #       '404':
  #         $ref: "common/common_errors.yml#/components/responses/NotFoundError"
  #       '413':
  #         description: Too many numbers to process
  #         content:
  #           application/json:
  #             schema:
  #               allOf:
  #                 - $ref: 'common/common_errors.yml#/components/responses/DefaultError/content/application~1json/schema'
  #                 - $ref: '#/components/schemas/ErrorTooManyNumbers'

  /v1/10DLC/brands/{brand_id}/campaigns/{campaign_id}/numbers/{number}:
    parameters:
      - $ref: '#/components/parameters/BrandId'
      - $ref: '#/components/parameters/CampaignId'
      - $ref: '#/components/parameters/Number'
    delete:
      tags:
        - Numbers
      summary: Remove a specific number from a campaign
      description: Remove number from campaign
      operationId: deleteNumber
      responses:
        '204':
          description: No content
        '401':
          $ref: "common/common_errors.yml#/components/responses/BadCredentialsError"
        '404':
          $ref: "common/common_errors.yml#/components/responses/NotFoundError"

components:
  examples:
    BrandNexmo:
      value:
        brand_id: "56b754b9-b376-434d-b5b9-ef6e5ec4e1ed"
        entity_type: "PUBLIC_PROFIT"
        display_name: "Nexmo"
        company_name: "Nexmo"
        ein: "20-1111111"
        alt_business_id_type: "DUNS"
        alt_business_id: "150483782"
        phone: "+15556660001"
        street: "23 Main Street"
        city: "Holmdel"
        state: "NJ"
        postal_code: "07733"
        country: "US"
        email: "devrel@vonage.com"
        stock_symbol: "VG"
        stock_exchange: "NASDAQ"
        website: "https://vonage.com"
        brand_relationship: "KEY_ACCOUNT"
        vertical: "TECHNOLOGY"
        _links:
          self:
            href: "/10DLC/brands/56b754b9-b376-434d-b5b9-ef6e5ec4e1ed"
          campaigns:
            href: "/10DLC/brands/56b754b9-b376-434d-b5b9-ef6e5ec4e1ed/campaigns"
          use_cases:
            href: "/10DLC/brands/56b754b9-b376-434d-b5b9-ef6e5ec4e1ed/use_cases"

    BrandVonage:
      value:
        brand_id: "BLQKOPK"
        entity_type: "PUBLIC_PROFIT"
        display_name: "Vonage"
        company_name: "Vonage"
        ein: "20-1111111"
        alt_business_id_type: "DUNS"
        alt_business_id: "150483782"
        phone: "+15556660001"
        street: "23 Main Street"
        city: "Holmdel"
        state: "NJ"
        postal_code: "07733"
        country: "US"
        email: "devrel@vonage.com"
        stock_symbol: "VG"
        stock_exchange: "NASDAQ"
        website: "https://vonage.com"
        brand_relationship: "KEY_ACCOUNT"
        vertical: "TECHNOLOGY"
        _links:
          self:
            href: "/10DLC/brands/BLQKOPK"
          campaigns:
            href: "/10DLC/brands/BLQKOPK/campaigns"
          use_cases:
            href: "/10DLC/brands/BLQKOPK/use_cases"

    Campaign:
      value:
        campaign_id: "81dd38e8-c172-4698-aa04-35c3709f5167"
        csp_id: "string"
        reseller_id: "string"
        status: "ACTIVE"
        created_date: "2020-10-06T08:51:32.119Z"
        brand_id: "BLQKOPK"
        vertical: "TECHNOLOGY"
        use_case: "ACCOUNT_NOTIFICATION"
        sub_use_cases: ["2FA", "SECURITY_ALERT"]
        description: "User notifications"
        embedded_link: false
        embedded_phone: false
        affiliate_marketing: true
        number_pool: false
        age_gated: true
        direct_lending: true
        subscriber_optin: false
        subscriber_optout: false
        subscriber_help: false
        sample_one: "Sample Message"
        sample_two: "Additional Sample Message"
        sample_three: "Additional Sample Message"
        sample_four: "Additional Sample Message"
        sample_five: "Additional Sample Message"
        message_flow: "string"
        help_message: "string"
        auto_renewal: true
        _links:
          self:
            href: "/10DLC/brands/BLQKOPK/campaigns/81dd38e8-c172-4698-aa04-35c3709f5167"
          numbers:
            href: "/10DLC/brands/BLQKOPK/campaigns/81dd38e8-c172-4698-aa04-35c3709f5167/numbers"

    Numbers:
      value:
        - "12025550150"
        - "12025550142"
        - "12025550178"
        - "12025550117"
        - "12025550182"
        - "12025550192"

    UseCases:
      value:
        - "ACCOUNT_NOTIFICATION"
        - "CONVERSATIONAL"
        - "DELIVERY_NOTIFICATION"

  responses:
    ErrorCouldNotRemoveNumberResponse:
      description: Error response for number deletion errors
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorCouldNotRemoveNumber'

    ErrorCreateBrandResponse:
      description: Various errors that can occur during brand creation
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'common/common_errors.yml#/components/responses/DefaultError/content/application~1json/schema'
              - type: object
                description: Errors with submission
                properties:
                  title:
                    description: Generic error message
                    example: There were some issues with the submitted data
                  type:
                    description: Link to error / remediation options
                    example: 'https://developer.nexmo.com/api-errors/10dlc#invalid-brand-data'
                  detail:
                    description: Additional information about the error
                    example: There were some errors submitting your brand, please correct the requested fields
                  errors:
                    description: Errors that are passed through from the Campaign Registry
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: integer
                          description: Campaign Registry error code
                          example: 503
                        field:
                          type: string
                          description: Field that had a data issue
                          example: company_name
                        description:
                          type: string
                          description: Error text
                          example: Field 'company_name' is not unique

    ErrorUnableToParseRequestResponse:
      description: Error for when we cannot parse the client-supplied request
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'common/common_errors.yml#/components/responses/DefaultError/content/application~1json/schema'
              - type: object
                description: Unable To Parse Request
                properties:
                  title:
                    description: Generic error message
                    example: Unable to parse incoming request
                  type:
                    description: Link to error / remediation options
                    example: 'https://developer.nexmo.com/api-errors/10dlc#invalid-json'
                  detail:
                    description: Additional information about the error
                    example: invalid character 'f' after object key:value pair

    MultiBrandsResponse:
      description: List of brands that are associated with an account
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'common/hal_structures.yml#/components/schemas/PagedResponse'
              - type: object
                properties:
                  _embedded:
                    type: object
                    properties:
                      brands:
                        type: array
                        items:
                          $ref: '#/components/schemas/BrandResponse'
          examples:
            simple:
              value:
                - page_size: 10
                  page: 1
                  total_pages: 1
                  total_items: 2
                  _embedded:
                    brands:
                      - $ref: '#/components/examples/BrandVonage/value'
                      - $ref: '#/components/examples/BrandNexmo/value'
    
    MultiCampaignsResponse:
      description: List of campaigns that are associated with a brand
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'common/hal_structures.yml#/components/schemas/PagedResponse'
              - type: object
                properties:
                  _embedded:
                    type: object
                    properties:
                      brands:
                        type: array
                        items:
                          $ref: '#/components/schemas/CampaignResponse'
          examples:
            simple:
              value:
                - page_size: 10
                  page: 1
                  total_pages: 1
                  total_items: 1
                  _embedded:
                    campaigns:
                      - $ref: '#/components/examples/Campaign/value'

    MultiNumbersResponse:
      description: List of campaigns that are associated with a brand
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'common/hal_structures.yml#/components/schemas/PagedResponse'
              - type: object
                properties:
                  _embedded:
                    type: object
                    properties:
                      numbers:
                        type: array
                        items:
                          $ref: '#/components/schemas/Number'
          examples:
            simple:
              value:
                - page_size: 10
                  page: 1
                  total_pages: 1
                  total_items: 6
                  _embedded:
                    numbers:
                      $ref: '#/components/examples/Numbers/value'

    MultiUseCasesResponse:
      description: List of use cases that are associated with a brand
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'common/hal_structures.yml#/components/schemas/PagedResponse'
              - type: object
                properties:
                  _embedded:
                    type: object
                    properties:
                      use_cases:
                        type: array
                        items:
                          $ref: '#/components/schemas/UseCase'
          examples:
            simple:
              value:
                - page_size: 10
                  page: 1
                  total_pages: 1
                  total_items: 3
                  _embedded:
                    use_cases:
                      $ref: '#/components/examples/UseCases/value'

    SingleBrandResponse:
      description: Return a single brand
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BrandResponse'
              - type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: "/10dlc/brands/5782db87-a867-4ccd-a0b5-1b7203cc438c"
          examples:
            vonage:
              value:
                $ref: '#/components/examples/BrandVonage/value'

    SingleCampaignResponse:
      description: Return a single campaign
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/CampaignResponse'
              - type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: "/10dlc/brands/5782db87-a867-4ccd-a0b5-1b7203cc438c/campaigns/57b3a89e-c9fa-4860-aec2-ad7f51539dab"
          examples:
            simple:
              value:
                $ref: '#/components/examples/Campaign/value'

    SingleNumberResponse:
      description: Return a single number in a campaign
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/NumberResponse'
              - type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: "/10dlc/brands/5782db87-a867-4ccd-a0b5-1b7203cc438c/campaigns/57b3a89e-c9fa-4860-aec2-ad7f51539dab"

  requestBodies:
    CreateBrand:
      required: true
      content:
        application/json:
          schema:
            oneOf:
              - title: Individual Person
                x-tab-id: IndividualPerson
                allOf:
                  - $ref: '#/components/schemas/CreateIndividualBrand'
              - title: Non-Profit
                x-tab-id: NonProfit
                allOf:
                  - $ref: '#/components/schemas/CreateNonProfitBrand'
              - title: Private Company
                x-tab-id: PrivateCompany
                allOf:
                  - $ref: '#/components/schemas/CreatePrivateCompanyBrand'
              - title: Public Company
                x-tab-id: PublicCompany
                allOf:
                  - $ref: '#/components/schemas/CreatePublicCompanyBrand'

    CreateCampaign:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              $ref: '#/components/schemas/Campaign/properties'
            required:
              - brand_id
              - vertical
              - use_case
              - description

    UpdateBrand:
      required: true
      content:
        application/json:
          schema:
            oneOf:
              - title: Individual Person
                x-tab-id: IndividualPerson
                allOf:
                  - $ref: '#/components/schemas/UpdateIndividualBrand'
              - title: Non-Profit
                x-tab-id: NonProfit
                allOf:
                  - $ref: '#/components/schemas/UpdateNonProfitBrand'
              - title: Private Company
                x-tab-id: PrivateCompany
                allOf:
                  - $ref: '#/components/schemas/UpdatePrivateCompanyBrand'
              - title: Public Company
                x-tab-id: PublicCompany
                allOf:
                  - $ref: '#/components/schemas/UpdatePublicCompanyBrand'

  schemas:
    Brand:
      type: object
      properties:
        entity_type:
          type: string
          enum:
            - INDIVIDUAL
            - PRIVATE_PROFIT
            - PUBLIC_PROFIC
            - NON_PROFIT
          example:
            $ref: '#/components/examples/BrandVonage/value/entity_type'
        display_name:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/display_name'
        company_name:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/company_name'
        ein:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/ein'
        alt_business_id_type:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/alt_business_id_type'
        alt_business_id:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/alt_business_id'
        phone:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/phone'
        street:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/street'
        city:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/city'
        state:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/state'
        postal_code:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/postal_code'
        country:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/country'
        email:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/email'
        stock_symbol:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/stock_symbol'
        stock_exchange:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/stock_exchange'
        website:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/website'
        brand_relationship:
          type: string
          enum:
            - BASIC_ACCOUNT
            - SMALL_ACCOUNT
            - MEDIUM_ACCOUNT
            - LARGE_ACCOUNT
            - KEY_ACCOUNT
          example:
            $ref: '#/components/examples/BrandVonage/value/brand_relationship'
        vertical:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/vertical'

    BrandEditableFields:
      description: Fields that are editable for a brand
      type: object
      properties:
        entity_type:
          type: string
          enum:
            - INDIVIDUAL
            - PRIVATE_PROFIT
            - PUBLIC_PROFIC
            - NON_PROFIT
          example:
            $ref: '#/components/examples/BrandVonage/value/entity_type'
        display_name:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/display_name'
        website:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/website'
        phone:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/phone'
        street:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/street'
        city:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/city'
        state:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/state'
        postal_code:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/postal_code'
        country:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/country'
        email:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/email'
        stock_symbol:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/stock_symbol'
        stock_exchange:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/stock_exchange'
        brand_relationship:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/brand_relationship'
        vertical:
          type: string
          example:
            $ref: '#/components/examples/BrandVonage/value/vertical'

    BrandResponse:
      allOf:
        - $ref: '#/components/schemas/Brand'
        - type: object
          properties:
            brand_id:
              $ref: '#/components/schemas/BrandId'
            created_date:
              type: string
              pattern: ^\d{4}-[01]\d-[0-3]\d [0-2]\d:[0-5]\d:[0-5]\d$
              example: '2020-01-02 05:12:14'
            last_updated:
              type: string
              pattern: ^\d{4}-[01]\d-[0-3]\d [0-2]\d:[0-5]\d:[0-5]\d$
              example: '2020-02-02 14:12:00'
            _links:
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.nexmo.com/10dlc/brands/BLQKOPK'
                campaigns:
                  type: object
                  properties:
                    href:
                      type: string
                      example: 'https://api.nexmo.com/10dlc/brands/BLQKOPK/campaigns'

    BrandId:
      description: Brand ID associated with a number
      example:
        $ref: '#/components/examples/BrandVonage/value/brand_id'
      type: string
      pattern: ^[0-9A-F]{7}$

    Campaign:
      type: object
      properties:
        brand_id:
          $ref: '#/components/schemas/BrandId'
        vertical:
          type: string
          example:
            $ref: '#/components/examples/Campaign/value/vertical'
        use_case:
          type: string
          example:
            $ref: '#/components/examples/Campaign/value/use_case'
        sub_use_cases:
          type: array
          items:
            type: string
          example:
            $ref: '#/components/examples/Campaign/value/sub_use_cases'
        reseller_id:
          type: string
          example:
            $ref: '#/components/examples/Campaign/value/reseller_id'
        description:
          type: string
          example:
            $ref: '#/components/examples/Campaign/value/description'
        embedded_link:
          type: boolean
          example:
            $ref: '#/components/examples/Campaign/value/embedded_link'
        embedded_phone:
          type: boolean
          example:
            $ref: '#/components/examples/Campaign/value/embedded_phone'
        number_pool:
          type: boolean
          example:
            $ref: '#/components/examples/Campaign/value/number_pool'
        age_gated:
          type: boolean
          example:
            $ref: '#/components/examples/Campaign/value/age_gated'
        direct_lending:
          type: boolean
          example:
            $ref: '#/components/examples/Campaign/value/direct_lending'
        subscriber_optin:
          type: boolean
          example:
            $ref: '#/components/examples/Campaign/value/subscriber_optin'
        subscriber_optout:
          type: boolean
          example:
            $ref: '#/components/examples/Campaign/value/subscriber_optout'
        subscriber_help:
          type: boolean
          example:
            $ref: '#/components/examples/Campaign/value/subscriber_help'
        sample_one:
          type: string
          example:
            $ref: '#/components/examples/Campaign/value/sample_one'
        sample_two:
          type: string
          example:
            $ref: '#/components/examples/Campaign/value/sample_two'
        sample_three:
          type: string
          example:
            $ref: '#/components/examples/Campaign/value/sample_three'
        sample_four:
          type: string
          example:
            $ref: '#/components/examples/Campaign/value/sample_four'
        message_flow:
          type: string
          example:
            $ref: '#/components/examples/Campaign/value/message_flow'
        help_message:
          type: string
          example:
            $ref: '#/components/examples/Campaign/value/help_message'
        # mno_ids:
        #   type: array
        #   items:
        #     type: string
        #   example:
        #     $ref: '#/components/examples/Campaign/value/mno_ids'
        affiliate_marketing:
          type: boolean
          example:
            $ref: '#/components/examples/Campaign/value/affiliate_marketing'

    CampaignId:
      description: ID associated with a specific campaign
      example: 57b3a89e-c9fa-4860-aec2-ad7f51539dab
      type: string
      pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$

    CampaignResponse:
      allOf:
        - $ref: '#/components/schemas/Campaign'
        - type: object
          properties:
            campaign_id:
              $ref: '#/components/schemas/CampaignId'
            created_date:
              type: string
            last_updated:
              type: string
            _links:
              type: object
              properties:
                self:
                  type: object
                  properties:
                    href:
                      type: string
                numbers:
                  type: object
                  properties:
                    href:
                      type: string

    CreateIndividualBrand:
      type: object
      properties:
        $ref: '#/components/schemas/Brand/properties'
      required:
        - entity_type
        - display_name
        - phone
        - country
        - email
        - brand_relationship

    CreateNonProfitBrand:
      type: object
      properties:
        $ref: '#/components/schemas/Brand/properties'
      required:
        - entity_type
        - display_name
        - company_name
        - ein
        - phone
        - country
        - email
        - brand_relationship
        - website

    CreatePrivateCompanyBrand:
      type: object
      properties:
        $ref: '#/components/schemas/Brand/properties'
      required:
        - entity_type
        - display_name
        - company_name
        - ein
        - phone
        - country
        - email
        - brand_relationship

    CreatePublicCompanyBrand:
      type: object
      properties:
        $ref: '#/components/schemas/Brand/properties'
      required:
        - entity_type
        - display_name
        - company_name
        - ein
        - phone
        - country
        - email
        - brand_relationship
        - stock_symbol
        - stock_exchange
        - website

    ErrorCouldNotRemoveNumber:
      allOf:
        - $ref: 'common/common_errors.yml#/components/responses/DefaultError/content/application~1json/schema'
        - type: object
          description: "Deletion Errors"
          properties:
            title:
              description: Generic error message
              example: There were errors removing numbers from the pool
            type:
              description: Link to error / remediation options
              example: 'https://developer.nexmo.com/api-errors/10dlc#number-deletion-failure'
            detail:
              description: Additional information about the error
              example: We were unable to remove any of the numbers from the campaign.
            errors:
              type: array
              items:
                type: object
                properties:
                  title:
                    description: Generic error message
                    example: Number not found
                  type:
                    description: Link to error / remediation options
                    example: 'https://developer.nexmo.com/api-errors/10dlc#missing-number'
                  detail:
                    description: Additional information about the error
                    example: One or more numbers being deleted are not available in the campaign
                  numbers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Number'
                    example:
                      - '15556660001'

    ErrorTooManyNumbers:
      type: object
      description: "Limit Exceeded"
      properties:
        title:
          description: Generic error message
          example: Bad Request
        type:
          description: Link to error / remediation options
          example: 'https://developer.nexmo.com/api-errors/10dlc#bulk-number-delete-limit'
        detail:
          description: Additional information about the error
          example: The request failed due to validation errors
        invalid_parameters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of the invalid key
                example: ids
              reason:
                type: string
                description: Additional validation information
                example: Limit of 50 numbers exceeded

    Number:
      description: Telephone Number
      example: '14155550110'
      type: string
      minLength: 7
      maxLength: 15
      pattern: '^[0-9]{7,15}$'

    NumberResponse:
      type: object
      properties:
        number:
          $ref: '#/components/schemas/Number'
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
            campaign:
              type: object
              properties:
                href:
                  type: string

    UpdateIndividualBrand:
      type: object
      properties:
        $ref: '#/components/schemas/BrandEditableFields/properties'
      required:
        - entity_type
        - display_name
        - phone
        - country
        - email
        - brand_relationship

    UpdateNonProfitBrand:
      type: object
      properties:
        $ref: '#/components/schemas/BrandEditableFields/properties'
      required:
        - entity_type
        - display_name
        - ein
        - phone
        - country
        - email
        - brand_relationship
        - website

    UpdatePrivateCompanyBrand:
      type: object
      properties:
        $ref: '#/components/schemas/BrandEditableFields/properties'
      required:
        - entity_type
        - display_name
        - ein
        - phone
        - country
        - email
        - brand_relationship

    UpdatePublicCompanyBrand:
      type: object
      properties:
        $ref: '#/components/schemas/BrandEditableFields/properties'
      required:
        - entity_type
        - display_name
        - phone
        - country
        - email
        - brand_relationship
        - stock_symbol
        - stock_exchange
        - website

    UseCase:
      description: Use Cases for Campaigns
      example: b047c816-4449-48a1-b4ad-a4a6ae2e9538
      type: string
      enum:
        - "2FA"
        - "ACCOUNT_NOTIFICATION"
        - "CARRIER_EXEMPT"
        - "CHARITY"
        - "CONVERSATIONAL"
        - "CUSTOMER_CARE"
        - "DELIVERY_NOTIFICATION"
        - "EMERGENCY"
        - "FRAUD_ALERT"
        - "HIGHER_EDUCATION"
        - "LOW_VOLUME"
        - "MARKETING"
        - "MIXED"
        - "POLITICAL"
        - "POLLING_VOTING"
        - "PUBLIC_SERVICE_ANNOUNCEMENT"
        - "SECURITY_ALERT"
        - "SOCIAL"
        - "SWEEPSTAKE"
        - "TRIAL"

  parameters:
    BrandId:
      name: brand_id
      in: path
      description: Brand ID associated with a number
      required: true
      schema:
        $ref: '#/components/schemas/BrandId'

    CampaignId:
      name: campaign_id
      in: path
      description: ID associated with a specific campaign
      required: true
      schema:
        $ref: '#/components/schemas/CampaignId'

    Number:
      in: path
      name: number
      description: Number to work with inside a campaign
      required: true
      schema:
        $ref: '#/components/schemas/Number'

tags:
  - name: Brands
    description: APIs relating to working with Brands
  - name: Campaigns
    description: APIs relating to working with Campaigns`
  - name: Numbers
    description: APIs relating to working with Numbers in Campaigns